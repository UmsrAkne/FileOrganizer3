<Window
    x:Class="FileOrganizer3.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behaviors="clr-namespace:FileOrganizer3.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:FileOrganizer3.Models"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:viewModels="clr-namespace:FileOrganizer3.ViewModels"
    Title="{Binding TextWrapper}"
    Width="800"
    Height="600"
    d:DataContext="{d:DesignInstance viewModels:DesignTimeViewModel}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    AllowDrop="True"
    FocusManager.FocusedElement="{Binding ElementName=MainListBox}"
    mc:Ignorable="d">

    <Window.InputBindings>
        <KeyBinding
            Key="H"
            Command="{Binding AppearanceManager.ToggleHistoryListVisibilityCommand}"
            Modifiers="Control" />

        <KeyBinding
            Key="Escape"
            Command="{Binding StopSoundCommand}"
            Modifiers="Shift" />
    </Window.InputBindings>

    <b:Interaction.Behaviors>
        <behaviors:DragAndDropBehavior />
    </b:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="{Binding AppearanceManager.HistoryPanelHeight, Mode=TwoWay}" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <Menu>
                <MenuItem Header="機能">

                    <MenuItem Command="{Binding FileContainer.ReverseListCommand}" Header="ファイルリストを逆順にする" />

                    <MenuItem Command="{Binding FileContainer.ClearFilesCommand}" Header="ファイルリストをクリア" />

                    <MenuItem Command="{Binding PlayedFileContainer.ClearFilesCommand}" Header="再生履歴をクリア" />

                    <MenuItem Command="{Binding FileContainer.SearchCommand}" Header="入力中の検索ワードで再検索 (F)" />

                </MenuItem>

                <MenuItem Header="マーク">
                    <MenuItem
                        Command="{Binding FileContainer.MarkFilesCommand}"
                        CommandParameter="{x:Static models:ExtractOption.All}"
                        Header="全ての項目をマーク" />

                    <MenuItem
                        Command="{Binding FileContainer.MarkFilesCommand}"
                        CommandParameter="{x:Static models:ExtractOption.NonIgnored}"
                        Header="無視していないアイテムをマーク" />

                    <MenuItem
                        Command="{Binding FileContainer.ToggleMarksCommand}"
                        CommandParameter="{x:Static models:ExtractOption.All}"
                        Header="全てのアイテムのマークをトグル" />

                    <MenuItem
                        Command="{Binding FileContainer.ToggleMarksCommand}"
                        CommandParameter="{x:Static models:ExtractOption.NonIgnored}"
                        Header="無視していないアイテムのマークをトグル" />

                </MenuItem>

                <MenuItem Header="リネーム">
                    <MenuItem Command="{Binding FileContainer.AppendTextToNameCommand}" Header="マークしたファイルにプレフィックス">
                        <MenuItem.CommandParameter>
                            <models:RenameOption IsPrefix="True">
                                <models:RenameOption.ExtractOption>
                                    <models:ExtractOption>Marked</models:ExtractOption>
                                </models:RenameOption.ExtractOption>
                            </models:RenameOption>
                        </MenuItem.CommandParameter>
                    </MenuItem>

                    <MenuItem Command="{Binding FileContainer.AppendTextToNameCommand}" Header="マークしたファイルにサフィックス">
                        <MenuItem.CommandParameter>
                            <models:RenameOption IsPrefix="False">
                                <models:RenameOption.ExtractOption>
                                    <models:ExtractOption>Marked</models:ExtractOption>
                                </models:RenameOption.ExtractOption>
                            </models:RenameOption>
                        </MenuItem.CommandParameter>
                    </MenuItem>

                    <MenuItem Command="{Binding FileContainer.AppendTextToNameCommand}" Header="無視状態のファイルにプレフィックス">
                        <MenuItem.CommandParameter>
                            <models:RenameOption IsPrefix="True">
                                <models:RenameOption.ExtractOption>
                                    <models:ExtractOption>Ignored</models:ExtractOption>
                                </models:RenameOption.ExtractOption>
                            </models:RenameOption>
                        </MenuItem.CommandParameter>
                    </MenuItem>

                    <MenuItem Command="{Binding FileContainer.AppendTextToNameCommand}" Header="無視状態のファイルにサフィックス">
                        <MenuItem.CommandParameter>
                            <models:RenameOption IsPrefix="False">
                                <models:RenameOption.ExtractOption>
                                    <models:ExtractOption>Ignored</models:ExtractOption>
                                </models:RenameOption.ExtractOption>
                            </models:RenameOption>
                        </MenuItem.CommandParameter>
                    </MenuItem>

                    <MenuItem Command="{Binding FileContainer.AppendNumberToNameCommand}" Header="連番をつける（プレフィックス）">
                        <MenuItem.CommandParameter>
                            <models:RenameOption IsPrefix="True">
                                <models:RenameOption.ExtractOption>
                                    <models:ExtractOption>NonIgnored</models:ExtractOption>
                                </models:RenameOption.ExtractOption>
                            </models:RenameOption>
                        </MenuItem.CommandParameter>
                    </MenuItem>

                    <MenuItem Command="{Binding FileContainer.AppendNumberToNameCommand}" Header="連番をつける（サフィックス）">
                        <MenuItem.CommandParameter>
                            <models:RenameOption IsPrefix="False">
                                <models:RenameOption.ExtractOption>
                                    <models:ExtractOption>NonIgnored</models:ExtractOption>
                                </models:RenameOption.ExtractOption>
                            </models:RenameOption>
                        </MenuItem.CommandParameter>
                    </MenuItem>

                    <MenuItem Command="{Binding FileContainer.AppendNumberToNameCommand}" Header="マークファイルに連番（プレフィックス）">
                        <MenuItem.CommandParameter>
                            <models:RenameOption IsPrefix="True">
                                <models:RenameOption.ExtractOption>
                                    <models:ExtractOption>Marked</models:ExtractOption>
                                </models:RenameOption.ExtractOption>
                            </models:RenameOption>
                        </MenuItem.CommandParameter>
                    </MenuItem>

                    <MenuItem Command="{Binding FileContainer.AppendNumberToNameCommand}" Header="マークファイルに連番（サフィックス）">
                        <MenuItem.CommandParameter>
                            <models:RenameOption IsPrefix="False">
                                <models:RenameOption.ExtractOption>
                                    <models:ExtractOption>Marked</models:ExtractOption>
                                </models:RenameOption.ExtractOption>
                            </models:RenameOption>
                        </MenuItem.CommandParameter>
                    </MenuItem>

                </MenuItem>

                <MenuItem Header="表示">
                    <MenuItem Command="{Binding AppearanceManager.ToggleHistoryListVisibilityCommand}" Header="フッターパネル折りたたむ (Ctrl + H)" />
                    <MenuItem Command="{Binding FileContainer.ShowInputPageCommand}" Header="特定の行までジャンプする (Ctrl + J)" />
                    <MenuItem Command="{Binding FileContainer.ShowSearchPageCommand}" Header="ファイル名を検索 (Ctrl + F)" />
                </MenuItem>

                <MenuItem Header="設定">
                    <MenuItem Command="{Binding ShowSettingPageCommand}" Header="設定画面を開く" />
                    <MenuItem Header="フォントサイズを設定する">
                        <MenuItem Command="{Binding AppearanceManager.SetFontSizeCommand}" Header="大">
                            <MenuItem.CommandParameter>
                                <sys:Double>17</sys:Double>
                            </MenuItem.CommandParameter>
                        </MenuItem>
                        <MenuItem Command="{Binding AppearanceManager.SetFontSizeCommand}" Header="中">
                            <MenuItem.CommandParameter>
                                <sys:Double>15</sys:Double>
                            </MenuItem.CommandParameter>
                        </MenuItem>
                        <MenuItem Command="{Binding AppearanceManager.SetFontSizeCommand}" Header="小">
                            <MenuItem.CommandParameter>
                                <sys:Double>13</sys:Double>
                            </MenuItem.CommandParameter>
                        </MenuItem>
                    </MenuItem>
                </MenuItem>
            </Menu>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel
                    Grid.Column="0"
                    Margin="5"
                    Orientation="Horizontal">
                    <TextBlock Text="開始番号 :" />

                    <TextBox
                        Width="50"
                        Margin="3,0"
                        Text="{Binding FileContainer.StartIndex}" />
                </StackPanel>

                <Button
                    Grid.Column="1"
                    Width="100"
                    Margin="4,2"
                    HorizontalAlignment="Right"
                    Command="{Binding FileContainer.RenameCommand}"
                    Content="Rename" />
            </Grid>

        </StackPanel>

        <ListBox
            x:Name="MainListBox"
            Grid.Row="1"
            AlternationCount="2"
            ItemsSource="{Binding FileContainer.FileInfoWrappers}"
            SelectedIndex="{Binding FileContainer.CursorManager.SelectedIndex}"
            SelectedItem="{Binding FileContainer.CursorManager.SelectedItem}">

            <ListBox.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="FontSize" Value="{Binding AppearanceManager.FontSize}" />
                </Style>
            </ListBox.Resources>

            <b:Interaction.Behaviors>
                <behaviors:ListBoxKeyDownBehavior />
            </b:Interaction.Behaviors>

            <ListBox.InputBindings>
                <KeyBinding Key="M" Command="{Binding FileContainer.MarkCommand}" />
                <KeyBinding Key="I" Command="{Binding FileContainer.IgnoreFileCommand}" />
                <KeyBinding
                    Key="Return"
                    Command="{Binding PlaySoundAndSaveCommand}"
                    CommandParameter="{Binding FileContainer.CursorManager.SelectedItem}" />
                <KeyBinding
                    Key="J"
                    Command="{Binding FileContainer.ShowInputPageCommand}"
                    Modifiers="Control" />

                <KeyBinding
                    Key="F"
                    Command="{Binding FileContainer.ShowSearchPageCommand}"
                    Modifiers="Control" />

                <KeyBinding Key="F" Command="{Binding FileContainer.SearchCommand}" />

            </ListBox.InputBindings>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=DataContext.AppearanceManager.FontSize}" />
                        </Style>
                    </DataTemplate.Resources>

                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsIgnored}" Value="True">
                                        <Setter Property="Opacity" Value="0.25" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            Width="50"
                            Text="{Binding Index, ConverterParameter=D4, Converter={StaticResource ZeroPaddingConverter}}" />

                        <TextBlock
                            Grid.Column="1"
                            Margin="4,0"
                            VerticalAlignment="Center"
                            Text="＊">

                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMarked}" Value="False">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <StackPanel Grid.Column="2">
                            <TextBlock Foreground="DarkOrange" Text="▶">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Playing}" Value="False">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <Border Width="0" Margin="10,0" />
                        </StackPanel>

                        <TextBlock Grid.Column="3" Text="{Binding Name}" />

                        <Border
                            Grid.Column="4"
                            BorderBrush="LightGray"
                            BorderThickness="1"
                            CornerRadius="3">
                            <TextBox
                                Margin="0,1"
                                BorderThickness="0"
                                Opacity="0.8"
                                Text="{Binding TemporaryName}" />
                        </Border>

                        <TextBlock
                            Grid.Column="5"
                            Width="40"
                            Padding="8,0,0,0"
                            FontSize="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=DataContext.AppearanceManager.FontSize}"
                            Text="{Binding PlayCount, StringFormat={}{0:D3}}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlayCount}" Value="0">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border
                                    x:Name="Border"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="1">
                                    <ContentPresenter />
                                </Border>

                                <ControlTemplate.Triggers>

                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                        <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="LightBlue" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="DodgerBlue" />
                                    </Trigger>

                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                    </Trigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>

        </ListBox>

        <GridSplitter
            Grid.Row="2"
            Height="3"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch" />

        <TabControl Grid.Row="3">

            <!--  IDEでは検出されないが、 ElementName は ListBoxKeyDownBehavior で分岐に使用するので消さないでください。  -->
            <TabItem Header="Play History">
                <ListBox
                    x:Name="HistoryListBox"
                    AlternationCount="2"
                    ItemsSource="{Binding PlayedFileContainer.FileInfoWrappers}"
                    SelectedIndex="{Binding PlayedFileContainer.CursorManager.SelectedIndex}"
                    SelectedItem="{Binding PlayedFileContainer.CursorManager.SelectedItem}"
                    Visibility="{Binding AppearanceManager.HistoryListVisibility}">

                    <b:Interaction.Behaviors>
                        <behaviors:ListBoxKeyDownBehavior />
                    </b:Interaction.Behaviors>

                    <ListBox.InputBindings>
                        <KeyBinding Key="M" Command="{Binding PlayedFileContainer.MarkCommand}" />
                        <KeyBinding Key="I" Command="{Binding PlayedFileContainer.IgnoreFileCommand}" />
                        <KeyBinding
                            Key="Return"
                            Command="{Binding PlaySoundCommand}"
                            CommandParameter="{Binding PlayedFileContainer.CursorManager.SelectedItem}" />
                    </ListBox.InputBindings>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=DataContext.AppearanceManager.FontSize}" />
                                </Style>
                            </DataTemplate.Resources>

                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsIgnored}" Value="True">
                                                <Setter Property="Opacity" Value="0.25" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    Grid.Column="0"
                                    Width="50"
                                    Text="{Binding Index, ConverterParameter=D4, Converter={StaticResource ZeroPaddingConverter}}" />

                                <TextBlock
                                    Grid.Column="1"
                                    Margin="4,0"
                                    VerticalAlignment="Center"
                                    Text="＊">

                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMarked}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <StackPanel Grid.Column="2">
                                    <TextBlock Foreground="DarkOrange" Text="▶">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Playing}" Value="False">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Border Width="0" Margin="10,0" />
                                </StackPanel>

                                <TextBlock Grid.Column="3" Text="{Binding Name}" />

                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border
                                            x:Name="Border"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            BorderThickness="1">
                                            <ContentPresenter />
                                        </Border>

                                        <ControlTemplate.Triggers>

                                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                            </Trigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="LightBlue" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="DodgerBlue" />
                                            </Trigger>

                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                            </Trigger>

                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>

                </ListBox>
            </TabItem>

            <TabItem Header="Marked files">
                <ListBox
                    x:Name="MarkedFileListBox"
                    AlternationCount="2"
                    ItemsSource="{Binding MarkedFiles.FileInfoWrappers}"
                    SelectedIndex="{Binding MarkedFiles.CursorManager.SelectedIndex}"
                    SelectedItem="{Binding MarkedFiles.CursorManager.SelectedItem}">

                    <b:Interaction.Behaviors>
                        <behaviors:ListBoxKeyDownBehavior />
                    </b:Interaction.Behaviors>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=DataContext.AppearanceManager.FontSize}" />
                                </Style>
                            </DataTemplate.Resources>

                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsIgnored}" Value="True">
                                                <Setter Property="Opacity" Value="0.25" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    Grid.Column="0"
                                    Width="50"
                                    Text="{Binding Index, ConverterParameter=D4, Converter={StaticResource ZeroPaddingConverter}}" />

                                <TextBlock Grid.Column="1" Text="{Binding Name}" />

                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border
                                            x:Name="Border"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            BorderThickness="1">
                                            <ContentPresenter />
                                        </Border>

                                        <ControlTemplate.Triggers>

                                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                            </Trigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="LightBlue" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="DodgerBlue" />
                                            </Trigger>

                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                            </Trigger>

                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </TabItem>

        </TabControl>
        <StatusBar Grid.Row="4">
            <StackPanel>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding FileContainer.FileInfoWrappers.Count, StringFormat=ファイル総数 : {0}}" />
                    <TextBlock Margin="10,0" Text="{Binding MarkedFiles.FileInfoWrappers.Count, StringFormat=マーク数 : {0}}" />
                </StackPanel>
                <Border Height="0" Margin="0,2" />
                <TextBlock Text="{Binding FileContainer.SearchPattern, StringFormat=/{0}}" />
            </StackPanel>
        </StatusBar>

    </Grid>
</Window>